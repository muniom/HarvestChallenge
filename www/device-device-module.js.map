{"version":3,"sources":["./src/app/device/add-device/add-device.page.html","./src/app/device/edit-device/edit-device.page.html","./src/app/device/view-device/view-device.page.html","./src/app/device/add-device/add-device.page.scss","./src/app/device/add-device/add-device.page.ts","./src/app/device/device.module.ts","./src/app/device/edit-device/edit-device.page.scss","./src/app/device/edit-device/edit-device.page.ts","./src/app/device/view-device/view-device.page.scss","./src/app/device/view-device/view-device.page.ts"],"names":[],"mappings":"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","file":"device-device-module.js","sourcesContent":["export default \"<section>\\r\\n    <mat-card class=\\\"blur mat-elevation-z10\\\">\\r\\n        <mat-card-header>\\r\\n            <mat-card-title>Add a Device</mat-card-title>\\r\\n            <mat-card-subtitle>Select a discovered device</mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n\\r\\n        <mat-card-content>\\r\\n            <form fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n                <alerts [messages]=\\\"alerts.messages\\\" [loading]=\\\"loading.partial || loading.full\\\"></alerts>\\r\\n\\r\\n                <mat-vertical-stepper #stepper *ngIf=\\\"!alerts.messages.info\\\" [linear]=\\\"true\\\">\\r\\n                    <!-- Devices -->\\r\\n                    <mat-step label=\\\"Discovered Devices\\\" [stepControl]=\\\"form.get('name')\\\">\\r\\n                        <mat-nav-list>\\r\\n                            <mat-list-item *ngFor=\\\"let device of discoveredDevices\\\"\\r\\n                                (click)=\\\"form.patchValue(device); stepper.next()\\\">\\r\\n                                <mat-icon matListIcon>{{ device.type?.icon }}</mat-icon>\\r\\n                                <h4 matLine>{{ device.name }}</h4>\\r\\n                                <p matLine>{{ device.description }}</p>\\r\\n                                <!-- <mat-icon>chevron_right</mat-icon> -->\\r\\n                            </mat-list-item>\\r\\n                        </mat-nav-list>\\r\\n                    </mat-step>\\r\\n                    \\r\\n                    <!-- Details -->\\r\\n                    <mat-step label=\\\"Device Details\\\" [stepControl]=\\\"form\\\">\\r\\n                        <div fxLayout=\\\"column\\\" class=\\\"padding-top-30\\\">\\r\\n                            <!-- Name -->\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\" />\\r\\n                            </mat-form-field>\\r\\n                            \\r\\n                            <!-- Type -->\\r\\n                            <mat-form-field>\\r\\n                                <mat-select placeholder=\\\"Type\\\" formControlName=\\\"type\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                                    <mat-select-trigger>\\r\\n                                        <mat-icon>{{ form.value.type?.icon }}</mat-icon>\\r\\n                                        {{ form.value.type?.label }}\\r\\n                                    </mat-select-trigger>\\r\\n\\r\\n                                    <mat-option *ngFor=\\\"let type of formOptions.deviceTypes\\\" [value]=\\\"type\\\">\\r\\n                                        <mat-icon>{{ type.icon }}</mat-icon>\\r\\n                                        {{ type.label }}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <!-- Description -->\\r\\n                            <mat-form-field>\\r\\n                                <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <!-- URL -->\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"Url\\\" formControlName=\\\"url\\\" type=\\\"text\\\" />\\r\\n                            </mat-form-field>\\r\\n                            \\r\\n                            <div class=\\\"padding-top-30\\\">\\r\\n                                <button mat-flat-button color=\\\"primary\\\" type=\\\"submit\\\" fxFlex>Add Device</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n                </mat-vertical-stepper>\\r\\n            </form>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n</section>\"","export default \"<section class=\\\"padding-0\\\">\\r\\n    <mat-card class=\\\"transparent mat-elevation-z0\\\">\\r\\n        <mat-card-header>\\r\\n            <div mat-card-avatar><button mat-icon-button [routerLink]=\\\"['../']\\\"><mat-icon>chevron_left</mat-icon></button></div>\\r\\n            <mat-card-title>Edit Device</mat-card-title>\\r\\n        </mat-card-header>\\r\\n    </mat-card>\\r\\n</section>\\r\\n        \\r\\n<section>\\r\\n    <mat-card class=\\\"blur mat-elevation-z10\\\">\\r\\n        <mat-card-header>\\r\\n            <div mat-card-avatar><mat-icon>{{ form.value.type?.icon }}</mat-icon></div>\\r\\n            <mat-card-title>{{ form.value.name || '&nbsp;' }}</mat-card-title>\\r\\n            <mat-card-subtitle>{{ form.value.description || '&nbsp;' }}</mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n\\r\\n        <mat-card-content>\\r\\n            <form fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n                <alerts [messages]=\\\"alerts.messages\\\" [loading]=\\\"loading.partial || loading.full\\\"></alerts>\\r\\n\\r\\n                <!-- Details -->\\r\\n                <div *ngIf=\\\"!alerts.messages.error\\\" fxLayout=\\\"column\\\" class=\\\"padding-top-30\\\">\\r\\n                    <!-- Name -->\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\" />\\r\\n                    </mat-form-field>\\r\\n                    \\r\\n                    <!-- Type\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Type\\\" formControlName=\\\"type\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                            <mat-select-trigger>\\r\\n                                <mat-icon>{{ form.value.type?.icon }}</mat-icon>\\r\\n                                {{ form.value.type?.label }}\\r\\n                            </mat-select-trigger>\\r\\n\\r\\n                            <mat-option *ngFor=\\\"let type of formOptions.deviceTypes\\\" [value]=\\\"type\\\">\\r\\n                                <mat-icon>{{ type.icon }}</mat-icon>\\r\\n                                {{ type.label }}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field> -->\\r\\n\\r\\n                    <!-- Description -->\\r\\n                    <mat-form-field>\\r\\n                        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <!-- URL -->\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Url\\\" formControlName=\\\"url\\\" type=\\\"text\\\" />\\r\\n                        <mat-error *ngIf=\\\"form.controls.url.errors\\\">{{ form.controls.url.errors?.hint }}</mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <!-- Room -->\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Room\\\" formControlName=\\\"room\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                            <mat-select-trigger>\\r\\n                                <mat-icon>{{ form.value.room?.icon }}</mat-icon>\\r\\n                                {{ form.value.room?.name }}\\r\\n                            </mat-select-trigger>\\r\\n\\r\\n                            <mat-option *ngFor=\\\"let room of formOptions.rooms\\\" [value]=\\\"room\\\">\\r\\n                                <mat-icon>{{ room.icon }}</mat-icon>\\r\\n                                {{ room.name }}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    \\r\\n                    <div class=\\\"padding-top-30\\\">\\r\\n                        <button mat-flat-button color=\\\"delete\\\" type=\\\"button\\\" fxFlex (click)=\\\"delete()\\\">Delete</button>\\r\\n                        <button mat-flat-button color=\\\"primary\\\" type=\\\"submit\\\" fxFlex>Save</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n</section>\"","export default \"<section fxFlex fxLayout=\\\"column\\\" class=\\\"padding-0\\\">\\r\\n    <mat-card class=\\\"dark square\\\">\\r\\n        <mat-card-header>\\r\\n            <div mat-card-avatar><mat-icon>{{ form.value.type?.icon }}</mat-icon></div>\\r\\n            <mat-card-title>{{ form.value.name }}</mat-card-title>\\r\\n            <mat-card-subtitle>{{ form.value.description }}</mat-card-subtitle>\\r\\n            <button mat-icon-button [routerLink]=\\\"['edit']\\\" matTooltip=\\\"Edit\\\"><mat-icon>edit</mat-icon></button>\\r\\n        </mat-card-header>\\r\\n\\r\\n        <mat-card-content>\\r\\n            <alerts [messages]=\\\"alerts.messages\\\" [loading]=\\\"loading.partial || loading.full\\\"></alerts>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <!-- Player -->\\r\\n    <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\" class=\\\"player\\\">\\r\\n        <div *ngIf=\\\"!form.value.url && !loading.partial\\\" class=\\\"padding-30\\\">\\r\\n            <alerts [messages]=\\\"{ warning: 'There is an issue with the stream' }\\\"></alerts>\\r\\n        </div>\\r\\n        \\r\\n        <div *ngIf=\\\"form.value.url\\\">\\r\\n            <iframe id=\\\"ytplayer\\\"\\r\\n                [src]=\\\"form.value.url | safe:'resourceUrl'\\\"\\r\\n                frameborder=\\\"0\\\" allowfullscreen>\\r\\n            </iframe>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZS9hZGQtZGV2aWNlL2FkZC1kZXZpY2UucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { BaseComponent } from '../../_shared/components/base.component';\r\nimport { validateForm } from '../../_shared/helpers/forms';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { DeviceService } from '../device.service';\r\nimport { DeviceForm, DeviceModel } from '../models/device.model';\r\nimport { DeviceStatuses } from '../models/device-statuses.dictionary';\r\nimport { DeviceTypes } from '../models/device-types.dictionary';\r\n\r\n\r\n@Component({\r\n    selector: 'app-add-device',\r\n    templateUrl: 'add-device.page.html',\r\n    styleUrls: ['add-device.page.scss'],\r\n})\r\nexport class AddDevicePage extends BaseComponent implements OnInit {\r\n    constructor(\r\n        private router: Router,\r\n        private snackBar: MatSnackBar,\r\n        public authService: AuthService,\r\n        private deviceService: DeviceService\r\n    ) { super(); }\r\n\r\n    public form = new DeviceForm();\r\n\r\n    public formOptions = {\r\n        deviceTypes: Object.values(DeviceTypes)\r\n    };\r\n\r\n    public discoveredDevices: DeviceModel[];\r\n\r\n    async ngOnInit() {\r\n        this.refresh();\r\n    }\r\n\r\n    async refresh() {\r\n        this.alerts.reset();\r\n        this.startLoading();\r\n        const existingDevices = await this.deviceService.list({\r\n            // Filters / Pagination\r\n        }).catch(error => this.alerts.set('error', error));\r\n\r\n        // Would normally be a service call\r\n        this.discoveredDevices = [\r\n            // Example devices - filtered by previously stored (IndexDB)\r\n            new DeviceModel({\r\n                serialNo: 'LHD-0000000001',\r\n                name: 'Logitech HD Cam',\r\n                type: DeviceTypes.webcam,\r\n                status: DeviceStatuses.online,\r\n                url: '//www.youtube.com/embed/bVk8XyjhTKo?autoplay=1'\r\n            }),\r\n            new DeviceModel({\r\n                serialNo: 'YC5000-000000001',\r\n                name: 'Yahama ClearMic 5000',\r\n                type: DeviceTypes.microphone,\r\n                status: DeviceStatuses.online,\r\n                url: '//www.broadcastify.com/webPlayer/1432'\r\n            }),\r\n            new DeviceModel({\r\n                serialNo: 'M-0000000001',\r\n                name: 'Mic #1',\r\n                type: DeviceTypes.microphone,\r\n                // url: ''\r\n            }),\r\n            new DeviceModel({\r\n                serialNo: 'C-0000000001',\r\n                name: 'Cam #1',\r\n                type: DeviceTypes.webcam,\r\n                url: '//www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1'\r\n            }),\r\n            new DeviceModel({\r\n                serialNo: 'H-000000001',\r\n                name: 'Headset #1',\r\n                type: DeviceTypes.headset,\r\n                // url: ''\r\n            })\r\n        ].filter(device => {\r\n            const existingDevice = existingDevices.find(existingDevice => device.name === existingDevice.name);\r\n            console.log('existingDevice', existingDevice);\r\n            return !existingDevice;\r\n        })\r\n        .map((device, i) => Object.assign(device, { // auto-assign id's\r\n            // deviceId: i + existingDevices.length,\r\n            orgId: this.authService.user.organisation.organisationId,\r\n            roomId: this.authService.room.roomId\r\n        }));\r\n\r\n        if (!this.discoveredDevices.length) this.alerts.set('info', 'No devices discovered');\r\n        this.stopLoading();\r\n    }\r\n\r\n    async save() {\r\n        // Validate\r\n        this.alerts.reset();\r\n        if (!validateForm(this.form)) return;\r\n\r\n        // Go\r\n        await this.startLoading();\r\n        await this.deviceService.save(this.form.value)\r\n            .then((device) => {\r\n                this.router.navigate(['device', device.deviceId]);\r\n            \r\n                // Notify\r\n                this.snackBar.open('Device Added', 'Close', { duration: 3000 });\r\n            })\r\n            .catch(error => this.alerts.set('error', error));\r\n        await this.stopLoading();\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { AddDevicePage } from './add-device/add-device.page';\r\nimport { EditDevicePage } from './edit-device/edit-device.page';\r\nimport { ViewDevicePage } from './view-device/view-device.page';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule, CommonModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path: 'add',\r\n                component: AddDevicePage\r\n            },\r\n            {\r\n                path: ':deviceId',\r\n                component: ViewDevicePage\r\n            },\r\n            {\r\n                path: ':deviceId/edit',\r\n                component: EditDevicePage\r\n            }\r\n        ])\r\n    ],\r\n    declarations: [\r\n        AddDevicePage,\r\n        EditDevicePage,\r\n        ViewDevicePage\r\n    ]\r\n})\r\nexport class DeviceModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZS9lZGl0LWRldmljZS9lZGl0LWRldmljZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { get } from 'lodash-es';\r\n\r\nimport { BaseComponent } from '../../_shared/components/base.component';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { DeviceService } from '../device.service';\r\nimport { DeviceForm, DeviceModel } from '../models/device.model';\r\nimport { validateForm } from '../../_shared/helpers/forms';\r\nimport { ConfirmDialogComponent } from '../../_shared/components/dialog/confirmation-dialog.component';\r\nimport { RoomService } from '../../room/room.service';\r\nimport { RoomModel } from '../../room/models/room.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-edit-device',\r\n    templateUrl: 'edit-device.page.html',\r\n    styleUrls: ['edit-device.page.scss'],\r\n})\r\nexport class EditDevicePage extends BaseComponent implements OnInit {\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private snackBar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n        public authService: AuthService,\r\n        private deviceService: DeviceService,\r\n        private roomService: RoomService\r\n    ) { super(); }\r\n\r\n    public form = new DeviceForm;\r\n\r\n    public formOptions: {\r\n        rooms?: RoomModel[]\r\n    } = {};\r\n\r\n    async ngOnInit() {\r\n        await this.startLoading();\r\n        this.formOptions.rooms = await this.roomService.list({})\r\n            .catch(error => this.alerts.set('error', error));\r\n        await this.stopLoading();\r\n\r\n        this.route.params.subscribe(() => {\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n    async refresh() {\r\n        this.alerts.reset();\r\n\r\n        // Go\r\n        await this.startLoading();\r\n        const device = await this.deviceService.get(+this.route.snapshot.params.deviceId)\r\n            .catch(error => this.alerts.set('error', error));\r\n        if (device) { console.log(device);\r\n            this.form.reset(device);\r\n        }\r\n        await this.stopLoading();\r\n    }\r\n\r\n    async delete() {\r\n        this.alerts.reset();\r\n\r\n        this.dialog.open(ConfirmDialogComponent, {\r\n            data: {\r\n                title: 'Confirm Delete',\r\n                msg: `Are you sure you want to Delete \"${ this.form.value.name }\"?`,\r\n                onClose: async (response: boolean) => {\r\n                    if (!response) return;\r\n     \r\n                    // Go\r\n                    await this.deviceService.delete(this.form.value.deviceId)\r\n                    .then(() => this.router.navigate(['/']))\r\n            \r\n                    // Notify\r\n                    this.snackBar.open('Device Deleted', 'Close', { duration: 3000 });\r\n               }\r\n            }\r\n        });\r\n    }\r\n\r\n    async save() {\r\n        this.alerts.reset();\r\n        if (!validateForm(this.form)) return;\r\n\r\n        // Go\r\n        await this.startLoading();\r\n        await this.deviceService.save(this.form.value)\r\n            .then((device) => {\r\n                // this.form.patchValue(device);\r\n                this.router.navigate(['/device', this.route.snapshot.params.deviceId]);\r\n            \r\n                // Notify\r\n                this.snackBar.open('Device Saved', 'Close', { duration: 3000 });\r\n            })\r\n            .catch(error => this.alerts.set('error', error));\r\n        await this.stopLoading();\r\n    }\r\n    \r\n    // TODO: Make generic\r\n    public compareFn(a, b) {\r\n        const property = 'roomId'; // Usually an Input within wrapping component\r\n        if (!a || !b || !get(a, property) || !get(b, property)) return false;\r\n        return get(a, property) === get(b, property);\r\n    }\r\n}\r\n","export default \":host::ng-deep .player {\\n  position: relative;\\n  background-color: var(--dark);\\n}\\n:host::ng-deep .player iframe {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL3ZpZXctZGV2aWNlL0M6XFxVc2Vyc1xcTWlrZVxcV29ya1xcU2NyYXBcXEhhcnZlc3RDaGFsbGVuZ2Uvc3JjXFxhcHBcXGRldmljZVxcdmlldy1kZXZpY2VcXHZpZXctZGV2aWNlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvZGV2aWNlL3ZpZXctZGV2aWNlL3ZpZXctZGV2aWNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGtCQUFBO0VBQ0EsNkJBQUE7QUNBUjtBREVRO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FDQVoiLCJmaWxlIjoic3JjL2FwcC9kZXZpY2Uvdmlldy1kZXZpY2Uvdmlldy1kZXZpY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Q6Om5nLWRlZXAge1xyXG4gICAgLnBsYXllciB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmspO1xyXG5cclxuICAgICAgICBpZnJhbWUge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCI6aG9zdDo6bmctZGVlcCAucGxheWVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYXJrKTtcbn1cbjpob3N0OjpuZy1kZWVwIC5wbGF5ZXIgaWZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BaseComponent } from '../../_shared/components/base.component';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { DeviceService } from '../device.service';\r\nimport { DeviceForm, DeviceModel } from '../models/device.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-view-device',\r\n    templateUrl: 'view-device.page.html',\r\n    styleUrls: ['view-device.page.scss'],\r\n})\r\nexport class ViewDevicePage extends BaseComponent implements OnInit {\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        public authService: AuthService,\r\n        private deviceService: DeviceService\r\n    ) { super(); }\r\n\r\n    public form = new DeviceForm;\r\n\r\n    async ngOnInit() {\r\n        this.route.params.subscribe(() => {\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n    async refresh() {\r\n        this.alerts.reset();\r\n\r\n        // Go\r\n        await this.startLoading();\r\n        const device = await this.deviceService.get(+this.route.snapshot.params.deviceId)\r\n            .catch(error => this.alerts.set('error', error));\r\n        if (device) { console.log(device);\r\n            this.form.reset(device);\r\n        }\r\n        await this.stopLoading();\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}